; This source code in this file is licensed to You by Castle Technology
; Limited ("Castle") and its licensors on contractual terms and conditions
; ("Licence") which entitle you freely to modify and/or to distribute this
; source code subject to Your compliance with the terms of the Licence.
; 
; This source code has been made available to You without any warranties
; whatsoever. Consequently, Your use, modification and distribution of this
; source code is entirely at Your own risk and neither Castle, its licensors
; nor any other person who has contributed to this source code shall be
; liable to You for any loss or damage which You may suffer as a result of
; Your use, modification or distribution of this source code.
; 
; Full details of Your rights and obligations are set out in the Licence.
; You should have received a copy of the Licence with this source code file.
; If You have not received a copy, the text of the Licence is available
; online at www.castle-technology.co.uk/riscosbaselicence.htm
; 

                GBLL    Debug
Debug           SETL    {FALSE}

                GET     hdr.UART

; Note - apart from HAL_DebugTX/HAL_DebugRX, all debug code is only designed to be used pre-MMU

                ; Output string pointed to by $str
                ; Corrupts $str, $temp1, $temp2, flags
                MACRO
                DebugStr_inl $str, $temp1, $temp2
         [ Debug
                LDR     $temp2, =C710Phys
10
                LDRB    $temp1, [$temp2, #UART_LSR]
                TST     $temp1, #THRE
                BEQ     %BT10
                LDRB    $temp1, [$str], #1
                CMP     $temp1, #0
                STRNEB  $temp1, [$temp2, #UART_THR]
                BNE     %BT10
         ]
                MEND

                ; Output static string
                ; Corrupts a1-a2, lr, flags
                MACRO
                DebugTX $str
         [ Debug
                IMPORT  DebugStr
                BL      DebugStr
                = "$str",13,10,0
                ALIGN
         ]
                MEND

                ; Output static string
                ; Corrupts given registers, flags
                MACRO
                DebugTX_inl $str, $temp1, $temp2, $temp3
         [ Debug
                ADR      $temp1, %FT10
                DebugStr_inl $temp1, $temp2, $temp3
                B        %FT20
10
                = "$str",13,10,0
                ALIGN
20
         ]
                MEND                                

                ; Corrupts a1-a3, lr, flags
                ; If $reg is a1/a2/a3/lr, it will also be preserved
                MACRO
                DebugReg $reg
         [ Debug
                IMPORT   DebugHex
            [ $reg <> a1
                MOV      a1, $reg
            ]
                BL       DebugHex
            [ ($reg = a2) :LOR: ($reg = a3) :LOR: ($reg = lr)
                MOV      $reg, a1
            ]
         ]
                MEND

                END

#!/bin/bash
# 
# This source code in this file is licensed to You by Castle Technology
# Limited ("Castle") and its licensors on contractual terms and conditions
# ("Licence") which entitle you freely to modify and/or to distribute this
# source code subject to Your compliance with the terms of the Licence.
# 
# This source code has been made available to You without any warranties
# whatsoever. Consequently, Your use, modification and distribution of this
# source code is entirely at Your own risk and neither Castle, its licensors
# nor any other person who has contributed to this source code shall be
# liable to You for any loss or damage which You may suffer as a result of
# Your use, modification or distribution of this source code.
# 
# Full details of Your rights and obligations are set out in the Licence.
# You should have received a copy of the Licence with this source code file.
# If You have not received a copy, the text of the Licence is available
# online at www.castle-technology.co.uk/riscosbaselicence.htm
# 
cvs -nq update -I! -ICVS -l $@
exit $?
__END__

=head1 NAME

=pod

cvsinfo - Describe CVS state of local directory (BASH shell script)

=head1 DESCRIPTION

B<cvsinfo [OPTIONS]> describes what I<would> happen I<if>
the command B<cvs update [OPTIONS]> was invoked, identifying files which are

=over 8

=item (?)

Unknown to CVS.

=item (M)

Locally modified

=item (U/P)

Need update

=back

In fact, the B<cvsinfo> does the following:

  cvs -nq update -I! -ICVS -l [OPTIONS]

By default, B<cvsinfo> acts upon the local directory only -- it does not
recurse into subdirectories.  To recurse, use the B<-R> option.

=head1 OPTIONS

Any options accepted by B<cvs update> are acceptable to B<cvsinfo>, but
bear in mind that no files will be changed.

=over 8

=item B<-R>

Process directories recursively.

=item B<-A>

Reset any sticky tags/date/kopts.

=item B<-C>

Overwrite locally modified files with clean repository copies.

=item B<-l>

Local directory only, no recursion.

=item B<-r> I<rev>

Update using specified revision/tag (is sticky).

=item B<-D> I<date>

Set date to update from (is sticky).

=back

=cut

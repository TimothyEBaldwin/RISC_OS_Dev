#!/bin/perl
# 
# This source code in this file is licensed to You by Castle Technology
# Limited ("Castle") and its licensors on contractual terms and conditions
# ("Licence") which entitle you freely to modify and/or to distribute this
# source code subject to Your compliance with the terms of the Licence.
# 
# This source code has been made available to You without any warranties
# whatsoever. Consequently, Your use, modification and distribution of this
# source code is entirely at Your own risk and neither Castle, its licensors
# nor any other person who has contributed to this source code shall be
# liable to You for any loss or damage which You may suffer as a result of
# Your use, modification or distribution of this source code.
# 
# Full details of Your rights and obligations are set out in the Licence.
# You should have received a copy of the Licence with this source code file.
# If You have not received a copy, the text of the Licence is available
# online at www.castle-technology.co.uk/riscosbaselicence.htm
# 
while($ARGV[0]=~/^-/) {
  $arg=shift @ARGV;
  if ($arg eq '-d') {
    $dironly=1;
  } elsif ($arg eq '--') {
    last;
  } else {
    die("$0: Unknown option '$arg'\n");
  };
};
if($#ARGV!=1) {
  die("Usage: $0 [-d] <source> <dest>\n");
};
$src=$ARGV[0];
$dest=$ARGV[1];
@stack=('');
while(defined($next=pop @stack)) {
#  print "Handling '$next'\n";
  if (-d "$src$next") {
#    print "(a directory)\n";
    # First, make sure destination exists
    if (!-d "$dest$next") {
      if (-e _) {
	die("$0: $dest$next exists and is not a directory\n");
      };
      print "Making directory $dest$next\n";
      mkdir "$dest$next",0777||
	die("$0: Couldn't make directory $dest$next: $!\n");
    };
    # Ok - recurse
    opendir(SRC,"$src$next")||
      die("Couldn't open directory $src$next: $!\n");
    while(defined($entry=readdir(SRC))) {
#      print "Got entry '$entry'\n";
      if($entry!~/^\.{1,2}$/) {
	push @stack,"$next/$entry";
      };
    };
    closedir(SRC);
  } elsif (-f _) {
#    print "(a file)\n";
    if ((!-f "$dest$next") && (!$dironly)) {
      if (-e "$dest$next") {
	die("$0: $dest$next exists and is not a file\n");
      };
      print "Creating file $dest$next\n";
      open(DEST,">$dest$next")||
	die("$0: Couldn't create $dest$next: $!\n");
      close(DEST);
    };
  } else {
    die("$0: Only files and directories supported.  $src$next is neither\n");
  };
#  print "Done with $next\n";
};

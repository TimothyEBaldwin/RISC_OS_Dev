; Copyright 1999 Pace Micro Technology plc
;
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;
; Title:   s.callbacks
; Purpose: 'Usermode do-nothing' function to enable callbacks to fire
;

; Enclosed is the source to the function usermode_donothing.  This drops you
; into user mode, does an OS_Byte 0,1 and then returns to supervisor mode.
; As the OS returns from the OS_Byte call callbacks are collected.

; Pre-condition: processor is in SVC26 or SVC32 mode
; Post-condition: processor is in same mode as on entry

        AREA    |asmutils$callback$$Code|,CODE,READONLY,PIC

        GET     hdr:ListOpts
        GET     hdr:Macros
        GET     hdr:System
        GET     hdr:Machine.<Machine>
        GET     hdr:APCS.<APCS>

; This function is currently known under many different names.
; Until they all synchronise (on usermode_donothing), export the
; aliases too.
        [ :LNOT: :DEF: DefineAliases
        GBLL    DefineAliases
DefineAliases SETL {TRUE}
        ]

        EXPORT  usermode_donothing
        [ DefineAliases
        EXPORT  CollectCallbacks
        EXPORT  user_mode_donothing
        ]

        [ No32bitCode :LAND: No26bitCode
        ! 1, "This code cannot be used in No26bitCode and No32bitCode!"
        ]

; extern void usermode_donothing(void);
        [ DefineAliases
CollectCallbacks
user_mode_donothing
        ]
usermode_donothing
        FunctionEntry
        [ No32bitCode
        TEQP    pc, #0                  ; Set USR mode, IRQs and FIQs enabled
        |
        MRS     r3, CPSR                ; Get current PSR
        BIC     r3, r3, #I32_bit :OR: F32_bit :OR: 2_1111
        MSR     CPSR_c, r3              ; Set USR26/USR32 mode, IRQs and FIQs enabled
        ]
        SWI     XOS_LeaveOS             ; SWI call from USR mode with interrupts enabled triggers callbacks
        MOVVS   r0, #0
        MOVVS   r1, #1
        SWIVS   XOS_Byte                ; No 'OS_LeaveOS', do this instead (slower)
        SWI     XOS_EnterOS             ; Re-enter SVC26/SVC32 mode
        [ No32bitCode
        NOP
        ]
        Return

        END

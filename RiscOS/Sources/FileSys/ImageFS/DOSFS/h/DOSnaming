/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*> h.DOSnaming <*/
/*---------------------------------------------------------------------------*/
/* MSDOS to RISCOS name conversion                Copyright (c) 1989 JGSmith */
/*---------------------------------------------------------------------------*/

#ifndef _h_DOSnaming
#define _h_DOSnaming

/*---------------------------------------------------------------------------*/

typedef enum {noName,noTrans,extTrans} transinfo ;

/*---------------------------------------------------------------------------*/

extern int   validchar(char *string,char init) ;
extern char *before(char *newptr,char *text,char marker,int npad) ;
extern char *after(char *newptr,char *text,char marker,int npad) ;
extern int   namematch(char *wcname,char *fname) ;
extern char *convertRISCOStoDOS(char *source,char *dest) ;
extern char *convertRISCOStoLFN(char *source,char *dest) ;
extern char *convertDOStoRISCOS(char *source,char *dest) ;
extern char mapchar(char cchr,char *fromlist,char *tolist) ;

/*---------------------------------------------------------------------------*/

typedef struct {
                char name[DOSnamesize] ;
                word flags ;               /* cache entry description flags */
                /* the above flag field ensures the structure end is aligned */
               } name_cache ;

typedef struct {
                char        name[MaxString] ; /* pathname */
                name_cache *ncache ;          /* and the attached name cache */
               } dirname_cache ;

/*---------------------------------------------------------------------------*/

extern name_cache *create_cache(int number_of_entries) ;
extern int         add_to_cache(name_cache *namecache,char *DOSextension) ;
extern int         check_cache(name_cache *namecache,char *DOSextension) ;

/*---------------------------------------------------------------------------*/

#endif /* _h_DOSnaming */

/*---------------------------------------------------------------------------*/
/*> EOF h.DOSnaming <*/

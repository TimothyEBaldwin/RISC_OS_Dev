SYS "OS_Module",6,,,256 TO ,,P%
[
.event_handler%
    TEQ     r0, #19
    STMEQIA r12, {r0-r14}
    MOV     pc, r14
.T% DCD     0
.R% DCD     0
]
P%=P%+&40
SYS "OS_Claim",&10,event_handler%,R%
*FX 14 19

DIM addr% 20

SYS "Socket_Creat",2,1,0 TO server%
SYS "Socket_Creat",2,1,0 TO client%
PRINT "Server   ";server%
PRINT "Client   ";client%

addr%!0=&20B80002
addr%!4=&0100007F
addr%!8=0
addr%!12=0
SYS "Socket_Bind",server%,addr%,16
SYS "Socket_Listen",server%,4
SYS "Socket_Connect",client%,addr%,16

SYS "Socket_Write",client%,addr%,4
addr%!16 = 16
SYS "Socket_Accept",server%,addr%,addr%+16 TO connected%
PRINT "Accepted ";connected%

SYS "Socket_Read",connected%,addr%,8

!addr%=1:SYS "Socket_Ioctl",connected%,&8004667E,addr%
SYS "XSocket_Read",connected%,addr%,8

!addr%=1:SYS "Socket_Ioctl",connected%,&8004667D,addr%

SYS "Socket_Write",client%,addr%,4

REPEAT:UNTIL R%!0 = 19
PROCassert("R%!4  = 1")
PROCassert("R%!8  = connected%")
PROCassert("R%!12 = &20B8")

A% = client%
B% = addr%
C% = 4
D% = 0
!R% = 0
[
.svc_event%
    SWI     "OS_EnterOS"
    STR     R3, R%
    SWI     "Socket_Write"
    SWI     "OS_ReadMonotonicTime"
    ADD     R1, R0, #2
.loop%
    SWI     "XPortable_Idle"
    SWI     "OS_ReadMonotonicTime"
    CMP     R1, R0
    BMI     loop%
    LDR     R0, R%
    SWI     "OS_LeaveOS"
    MOV     pc, lr
]
IF USR(svc_event%) THEN ERROR EXT 0,"Internet event not in callback"

PROCassert("R%!4  = 1")
PROCassert("R%!8  = connected%")
PROCassert("R%!12 = &20B8")


*FX 13 19
SYS "OS_Release",&10,event_handler%,R%

SYS "Socket_Close", server%
SYS "Socket_Close", client%
SYS "Socket_Close", connected%
END

DEF PROCassert(A$)
IF EVAL(A$) ENDPROC
ERROR EXT 0, "Assertion failed: " + A$

DEF PROCioctl(F%, C%, V%)
!T% = V%
SYS "Socket_Ioctl",connected%,&8004667D,addr%
ENDPROC


